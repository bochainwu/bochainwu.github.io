{"version":3,"file":"component---src-templates-blog-post-js-f58916f6feccac7c5a83.js","mappings":"2KAyGA,IA9FY,KAAO,IAAD,IAChB,MAAMA,GAAOC,EAAAA,EAAAA,gBAAe,cAkB5BC,QAAQC,IAAIH,GACZ,MAAMI,EAA+B,QAAzB,EAAGJ,EAAKK,KAAKC,oBAAY,aAAtB,EAAwBF,OACjCG,EAA+B,QAAzB,EAAGP,EAAKK,KAAKC,oBAAY,aAAtB,EAAwBC,OACjCC,EAAW,GACjB,OACE,yBACE,eACEC,UAAU,MACVC,MAAO,CACLC,aAAa,UAGf,QAAC,EAAAC,EAAW,CACVH,UAAU,aACVI,IAAI,uBACJC,IAAI,kBAAiB,uBAEtBV,aAAM,EAANA,EAAQW,QACP,iBAAG,qBACgB,sBAASX,EAAOW,MAAc,SAAO,KACrDX,aAAM,EAANA,EAAQY,UAAW,QAI1B,eACEP,UAAU,SACVC,MAAO,CACLO,UAAU,YAGZ,aACER,UAAU,SACVS,KAAI,yBAAyBX,aAAM,EAANA,EAAQY,UAAO,MAE5C,QAAC,EAAAP,EAAW,CACVC,IAAI,wBACJO,MAAOZ,EACPa,OAAQb,EAAS,wBAGrB,aACEC,UAAU,SACVS,KAAI,2BAA2BX,aAAM,EAANA,EAAQe,YAAS,eAEhD,QAAC,EAAAV,EAAW,CACVC,IAAI,0BACJO,MAAOZ,EACPa,OAAQb,EAAS,wBAGrB,aACEC,UAAU,SACVS,KAAI,wBAAwBX,aAAM,EAANA,EAAQY,UAAO,MAE3C,QAAC,EAAAP,EAAW,CACVC,IAAI,uBACJO,MAAOZ,EACPa,OAAQb,EAAS,wBAGrB,aACEC,UAAU,SACVS,KAAI,YAAYX,aAAM,EAANA,EAAQgB,OAAI,yBAE5B,QAAC,EAAAX,EAAW,CACVC,IAAI,sBACJO,MAAOZ,EACPa,OAAQb,EAAS,wBAItB,C,+HC/FP,MAwDagB,EAAO,IAAyC,IAAtCxB,MAAQyB,eAAgBC,IAAQ,EACrD,OACE,QAAC,IAAG,CACFC,MAAOD,EAAKE,YAAYD,MACxBE,YAAaH,EAAKE,YAAYC,aAAeH,EAAKI,SAClD,EAIN,UAjEyB,IAGlB,IAAD,MAFJ9B,MAAM,SAAE+B,EAAQ,KAAEC,EAAI,KAAE3B,EAAMoB,eAAgBC,GAAM,SACpDO,GACD,EACC,MAAMC,GAA6B,QAAjB,EAAA7B,EAAKC,oBAAY,aAAjB,EAAmBqB,QAAK,QAE1C,OACE,QAAC,IAAM,CAACM,SAAUA,EAAUN,MAAOO,IACjC,mBACEzB,UAAU,YACV0B,WAAS,EACTC,SAAS,8BAET,uBACE,cAAIC,SAAS,YAAYX,EAAKE,YAAYD,QAC1C,iBAAID,EAAKE,YAAYU,QAEvB,mBACEC,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCJ,SAAS,iBAEX,oBACA,uBACE,QAAC,IAAG,SAGR,eAAK5B,UAAU,kBACb,cACEC,MAAO,CACLgC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,KAGX,kBACGf,IACC,QAAC,EAAAgB,KAAI,CAACC,GAAIjB,EAASkB,OAAOC,KAAMC,IAAI,QAAO,KACtCpB,EAASH,YAAYD,SAI9B,kBACGK,IACC,QAAC,EAAAe,KAAI,CAACC,GAAIhB,EAAKiB,OAAOC,KAAMC,IAAI,QAC7BnB,EAAKJ,YAAYD,MAAM,SAM3B,C","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n            age\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  console.log(data)\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n  const iconsize = 30\n  return (\n    <>\n      <div\n        className=\"bio\"\n        style={{\n          marginbottom: `20px`,\n        }}\n      >\n        <StaticImage\n          className=\"bio-avatar\"\n          src=\"../images/avatar.png\"\n          alt=\"Profile picture\"\n        />\n        {author?.name && (\n          <p>\n            Hello My name is <strong>{author.name}</strong>. I am{\" \"}\n            {author?.summary || null}\n          </p>\n        )}\n      </div>\n      <div\n        className=\"social\"\n        style={{\n          textAlign: `center`,\n        }}\n      >\n        <a\n          className=\"social\"\n          href={`https://twitter.com/${social?.twitter || ``}`}\n        >\n          <StaticImage\n            src=\"../images/twitter.png\"\n            width={iconsize}\n            height={iconsize}\n          />\n        </a>\n        <a\n          className=\"social\"\n          href={`https://instagram.com/${social?.instagram || `_bochain_`}`}\n        >\n          <StaticImage\n            src=\"../images/instagram.png\"\n            width={iconsize}\n            height={iconsize}\n          />\n        </a>\n        <a\n          className=\"social\"\n          href={`https://github.com/${social?.twitter || ``}`}\n        >\n          <StaticImage\n            src=\"../images/github.png\"\n            width={iconsize}\n            height={iconsize}\n          />\n        </a>\n        <a\n          className=\"social\"\n          href={`mailto:${social?.mail || `bochainwu@gmail.com`}`}\n        >\n          <StaticImage\n            src=\"../images/email.png\"\n            width={iconsize}\n            height={iconsize}\n          />\n        </a>\n      </div>\n    </>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Bio from \"../components/bio\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","console","log","author","site","siteMetadata","social","iconsize","className","style","marginbottom","S","src","alt","name","summary","textAlign","href","twitter","width","height","instagram","mail","Head","markdownRemark","post","title","frontmatter","description","excerpt","previous","next","location","siteTitle","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}