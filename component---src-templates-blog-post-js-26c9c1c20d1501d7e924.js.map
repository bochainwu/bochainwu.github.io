{"version":3,"file":"component---src-templates-blog-post-js-26c9c1c20d1501d7e924.js","mappings":"2KA0FA,IA/EY,KAAO,IAAD,IAChB,MAAMA,GAAOC,EAAAA,EAAAA,gBAAe,cAkB5BC,QAAQC,IAAIH,GACZ,MAAMI,EAA+B,QAAzB,EAAGJ,EAAKK,KAAKC,oBAAY,aAAtB,EAAwBF,OACjCG,EAA+B,QAAzB,EAAGP,EAAKK,KAAKC,oBAAY,aAAtB,EAAwBC,OACjCC,EAAW,GACjB,OACE,yBACE,eACEC,UAAU,MACVC,MAAO,CACLC,aAAa,UAGf,QAAC,EAAAC,EAAW,CACVH,UAAU,aACVI,IAAI,uBACJC,IAAI,kBAAiB,uBAEtBV,aAAM,EAANA,EAAQW,QACP,iBAAG,sBAAkB,sBAASX,EAAOW,MAAc,YAASX,aAAM,EAANA,EAAQY,UAAW,QAGnF,eACEP,UAAU,SACVC,MAAO,CACLO,UAAU,YAGZ,aAAGR,UAAU,SAASS,KAAI,yBAAyBX,aAAM,EAANA,EAAQY,UAAO,MAChE,QAAC,EAAAP,EAAW,CACVC,IAAI,wBACJO,MAAOZ,EACPa,OAAQb,EAAS,wBAGrB,aAAGC,UAAU,SAASS,KAAI,2BAA2BX,aAAM,EAANA,EAAQe,YAAS,eACpE,QAAC,EAAAV,EAAW,CACVC,IAAI,0BACJO,MAAOZ,EACPa,OAAQb,EAAS,wBAGrB,aAAGC,UAAU,SAASS,KAAI,wBAAwBX,aAAM,EAANA,EAAQY,UAAO,MAC/D,QAAC,EAAAP,EAAW,CACVC,IAAI,uBACJO,MAAOZ,EACPa,OAAQb,EAAS,wBAGrB,aAAGC,UAAU,SAASS,KAAI,YAAYX,aAAM,EAANA,EAAQgB,OAAI,yBAClD,QAAC,EAAAX,EAAW,CACRC,IAAI,sBACJO,MAAOZ,EACPa,OAAQb,EAAS,wBAItB,C,+HChFP,MAwDagB,EAAO,IAAyC,IAAtCxB,MAAQyB,eAAgBC,IAAQ,EACrD,OACE,QAAC,IAAG,CACFC,MAAOD,EAAKE,YAAYD,MACxBE,YAAaH,EAAKE,YAAYC,aAAeH,EAAKI,SAClD,EAIN,UAjEyB,IAGlB,IAAD,MAFJ9B,MAAM,SAAE+B,EAAQ,KAAEC,EAAI,KAAE3B,EAAMoB,eAAgBC,GAAM,SACpDO,GACD,EACC,MAAMC,GAA6B,QAAjB,EAAA7B,EAAKC,oBAAY,aAAjB,EAAmBqB,QAAK,QAE1C,OACE,QAAC,IAAM,CAACM,SAAUA,EAAUN,MAAOO,IACjC,mBACEzB,UAAU,YACV0B,WAAS,EACTC,SAAS,8BAET,uBACE,cAAIC,SAAS,YAAYX,EAAKE,YAAYD,QAC1C,iBAAID,EAAKE,YAAYU,QAEvB,mBACEC,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCJ,SAAS,iBAEX,oBACA,uBACE,QAAC,IAAG,SAGR,eAAK5B,UAAU,kBACb,cACEC,MAAO,CACLgC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,KAGX,kBACGf,IACC,QAAC,EAAAgB,KAAI,CAACC,GAAIjB,EAASkB,OAAOC,KAAMC,IAAI,QAAO,KACtCpB,EAASH,YAAYD,SAI9B,kBACGK,IACC,QAAC,EAAAe,KAAI,CAACC,GAAIhB,EAAKiB,OAAOC,KAAMC,IAAI,QAC7BnB,EAAKJ,YAAYD,MAAM,SAM3B,C","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n            age\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  console.log(data)\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n  const iconsize = 30;\r\n  return (\r\n    <>\r\n      <div \r\n        className=\"bio\"\r\n        style={{\r\n          marginbottom:`20px`\r\n        }}\r\n      >\r\n        <StaticImage\r\n          className=\"bio-avatar\"\r\n          src=\"../images/avatar.png\"\r\n          alt=\"Profile picture\"\r\n        />\r\n        {author?.name && (\r\n          <p>Hello  My name is <strong>{author.name}</strong>. I am  {author?.summary || null}</p>     \r\n        )}\r\n      </div>\r\n      <div\r\n        className=\"social\"\r\n        style={{\r\n          textAlign:`center`\r\n        }}\r\n        >\r\n        <a className=\"social\" href={`https://twitter.com/${social?.twitter || ``}`}>\r\n          <StaticImage\r\n            src=\"../images/twitter.png\"\r\n            width={iconsize}\r\n            height={iconsize}\r\n          />\r\n        </a>\r\n        <a className=\"social\" href={`https://instagram.com/${social?.instagram || `_bochain_`}`}>\r\n          <StaticImage\r\n            src=\"../images/instagram.png\"\r\n            width={iconsize}\r\n            height={iconsize}\r\n          />\r\n        </a>\r\n        <a className=\"social\" href={`https://github.com/${social?.twitter || ``}`}>\r\n          <StaticImage\r\n            src=\"../images/github.png\"\r\n            width={iconsize}\r\n            height={iconsize}\r\n          />\r\n        </a>\r\n        <a className=\"social\" href={`mailto:${social?.mail||`bochainwu@gmail.com`}`}>\r\n        <StaticImage\r\n            src=\"../images/email.png\"\r\n            width={iconsize}\r\n            height={iconsize}\r\n          />\r\n        </a>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Bio from \"../components/bio\"\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { previous, next, site, markdownRemark: post },\r\n  location,\r\n}) => {\r\n  const siteTitle = site.siteMetadata?.title || `Title`\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>  \r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = ({ data: { markdownRemark: post } }) => {\r\n  return (\r\n    <Seo\r\n      title={post.frontmatter.title}\r\n      description={post.frontmatter.description || post.excerpt}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["data","useStaticQuery","console","log","author","site","siteMetadata","social","iconsize","className","style","marginbottom","S","src","alt","name","summary","textAlign","href","twitter","width","height","instagram","mail","Head","markdownRemark","post","title","frontmatter","description","excerpt","previous","next","location","siteTitle","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}